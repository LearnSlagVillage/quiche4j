<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.quiche4j</groupId>
  <artifactId>quiche4j</artifactId>
  <packaging>jar</packaging>
  <version>0.1.0-SNAPSHOT</version>
  <name>Quiche4j</name>
  <url>https://github.com/kachayev/quiche4j</url>
  <properties>
    <build.mode>debug</build.mode>
    <project.build.headersDirectory>${project.build.directory}/${build.mode}/lib/native-headers</project.build.headersDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <build.nativeLibPath>${project.build.directory}/${build.mode}/lib</build.nativeLibPath>
    <packaging.native>${project.build.directory}/${build.mode}/lib</packaging.native>
    <skipRustLibBuild>false</skipRustLibBuild>
    <build.cargoFlag></build.cargoFlag>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
          <directory>src/main/resources</directory>
          <excludes>
              <exclude>**/*.md</exclude>
              <exclude>**/*.h</exclude>
              <exclude>**/*.lib</exclude>
          </excludes>
      </resource>
  </resources>    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <!-- A configuration shared across multiple executions -->
        <configuration>
          <executable>cargo</executable>
          <workingDirectory>${project.basedir}/src/main/rust/quiche_jni/</workingDirectory>
        </configuration>
        <executions>
          <execution>
            <id>build-rust-lib-for-tests</id>
            <phase>compile</phase>
            <configuration>
              <arguments>
                <argument>build</argument>
                <argument>--color</argument>
                <argument>always</argument>
              </arguments>
              <skip>${skipRustLibBuild}</skip>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <!--We need to copy quiche_jni dynamic library to the /lib/native directory-->
          <execution>
            <id>copy-native-lib</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${packaging.native}</outputDirectory>
              <resources>
                <resource>
                  <directory>${build.nativeLibPath}</directory>
                  <includes>
                    <include>libquiche_jni.so</include>
                    <include>libquiche_jni.dylib</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
            </manifest>
          </archive>
        </configuration>
      </plugin>      
    </plugins>
  </build>
</project>
